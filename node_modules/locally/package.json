{
  "author": {
    "name": "Rhio Kim",
    "email": "rhio.kim@gmail.com",
    "url": "http://about.me/rhio"
  },
  "name": "locally",
  "description": "simple, locally web server for file serving & markup job. '$ python -m SimpleHTTPServer 8080' ",
  "version": "0.1.2",
  "homepage": "http://github.com/rhiokim/locally",
  "repository": {
    "type": "git",
    "url": "git@github.com:rhiokim/locally.git"
  },
  "main": "index.js",
  "bin": {
    "locally": "./bin/locally",
    "_locally": "./bin/_locally"
  },
  "engines": {
    "node": "~0.6.9"
  },
  "dependencies": {
    "commander": "0.5.x",
    "connect": "1.8.x"
  },
  "devDependencies": {},
  "optionalDependencies": {},
  "readme": "#intro\nlocally 는 웹 개발 시 로컬 서버를 손쉽게 생성해서 테스트 개발환경을 구축하기 위한 Node.js 기반의 미들웨어이다.  이 프로젝트는 Python 의 SimpleHTTPServer 에서 아이디어를 얻었다.\n\n언제, 어느 작업 디렉토리에 있던 내가 원하는 로컬 서버를 설정하기 위해서 사용된다.\n\n뿐만 아니라 최근의 웹 기술중 서버측 css인 less 를 지원한다. 그리고 향후 유용한 서버측 환경설정 프리셋을 제공하여 손쉽게 마크업 개발 환경을 만들 예정이다.\n\n#locally middleware\nlocally 는 connect 모듈을 기반으로 동작하는데 connect 모듈은 다양한 미들웨어를 추가해서 high class 기능등을 사용할 수 있다.  뿐만 아니라 손쉽게 로컬 웹 서버를 구축해서 마크업 환경을 설정할 수 있다.\n\n#usage\n**directory structure**\n\n```\n./\n+ static\n  - js\n  - img\n  - css\n+ public\n  - index.html\n  + routes\n    - about/index.html\n```\n\n\n**basic command**\n\n```\n//simple command\n$ locally -p 8080\n\n//full command\n$ locally --static ./static --public ./public -port 8080\n\n$ curl http://localhost:8080/\n$ curl http://localhost:8080/about\n```\n\n**python**\n\n```python\n$ python -m SimpleHTTPServer -p 8080\n```\n\n**help cli**\n\n```\n$ node lib/locally.js --help\n\n  Usage: locally.js [options] [command]\n\n  Commands:\n\n    init \n    locally setup webserver configuration\n\n  Options:\n\n    -h, --help                output usage information\n    -V, --version             output the version number\n    -s, --static <directory>  directory for serving static files\n    -d, --public <directory>  directory for serving public files\n```\n\n",
  "_id": "locally@0.1.2",
  "_from": "locally"
}
